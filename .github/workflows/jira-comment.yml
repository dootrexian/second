name: Comment on Jira Issue from Commit

on:
  push:
    branches:
      - dev

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit message
        id: get_commit
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_ENV
          
          # Extract all JIRA ticket references (case-insensitive)
          ISSUE_KEYS=$(echo "$COMMIT_MSG" | grep -oiE 'gj-?[0-9]+' | tr '[:lower:]' '[:upper:]' | sort -u | tr '\n' ',' | sed 's/,$//' || true)
          echo "ISSUE_KEYS=$ISSUE_KEYS" >> $GITHUB_ENV
          
          if [ -n "$ISSUE_KEYS" ]; then
            echo "Found JIRA tickets: $ISSUE_KEYS"
          fi

      - name: Comment on Jira
        if: env.ISSUE_KEYS != ''
        run: |
          # Get secrets
          JIRA_EMAIL_SECRET="${{ secrets.JIRA_EMAIL }}"
          JIRA_TOKEN_SECRET="${{ secrets.JIRA_API_TOKEN }}"
          JIRA_BASE_SECRET="${{ secrets.JIRA_BASE_URL }}"
          
          # Quick secret validation
          if [ -z "$JIRA_EMAIL_SECRET" ] || [ -z "$JIRA_TOKEN_SECRET" ] || [ -z "$JIRA_BASE_SECRET" ]; then
            echo "‚ùå Missing JIRA secrets. Check organization secrets: JIRA_EMAIL, JIRA_API_TOKEN, JIRA_BASE_URL"
            exit 1
          fi
          
          # Clean base URL
          JIRA_BASE_CLEAN=$(echo "$JIRA_BASE_SECRET" | sed 's/\/$//')
          
          # Process tickets and post comments
          IFS=',' read -ra TICKET_ARRAY <<< "${{ env.ISSUE_KEYS }}"
          VALID_TICKETS=""
          TICKET_LINKS=""
          
          for ISSUE_KEY in "${TICKET_ARRAY[@]}"; do
            ISSUE_KEY=$(echo "$ISSUE_KEY" | tr -d ' ')
            [ -z "$ISSUE_KEY" ] && continue
            
            # Quick ticket validation with timeout
            if timeout 10 curl -sf -u "$JIRA_EMAIL_SECRET:$JIRA_TOKEN_SECRET" \
               "$JIRA_BASE_CLEAN/rest/api/3/issue/$ISSUE_KEY" >/dev/null 2>&1; then
              
              echo "‚úÖ $ISSUE_KEY accessible"
              
              # Add to valid lists
              VALID_TICKETS="${VALID_TICKETS:+$VALID_TICKETS,}$ISSUE_KEY"
              TICKET_LINKS="${TICKET_LINKS:+$TICKET_LINKS, }[$ISSUE_KEY]($JIRA_BASE_CLEAN/browse/$ISSUE_KEY)"
            else
              echo "‚ö†Ô∏è $ISSUE_KEY not accessible"
            fi
          done
          
          [ -z "$VALID_TICKETS" ] && { echo "‚ùå No valid tickets found"; exit 1; }
          
          # Post comments to valid tickets
          IFS=',' read -ra VALID_TICKET_ARRAY <<< "$VALID_TICKETS"
          for ISSUE_KEY in "${VALID_TICKET_ARRAY[@]}"; do
            ISSUE_KEY=$(echo "$ISSUE_KEY" | tr -d ' ')
            
            if timeout 15 curl -sf -X POST -u "$JIRA_EMAIL_SECRET:$JIRA_TOKEN_SECRET" \
               -H "Content-Type: application/json" \
               --data "{\"body\": {\"type\": \"doc\", \"version\": 1, \"content\": [{\"type\": \"paragraph\", \"content\": [{\"type\": \"text\", \"text\": \"üöÄ Commit \"}, {\"type\": \"text\", \"text\": \"${{ github.sha }}\", \"marks\": [{\"type\": \"code\"}]}, {\"type\": \"text\", \"text\": \" by ${{ github.actor }}\\n\\nüìã Related tickets: $TICKET_LINKS\\n\\nüí¨ ${{ env.COMMIT_MSG }}\"}]}]}}" \
               "$JIRA_BASE_CLEAN/rest/api/3/issue/$ISSUE_KEY/comment" >/dev/null 2>&1; then
              echo "‚úÖ Commented on $ISSUE_KEY"
            else
              echo "‚ö†Ô∏è Failed to comment on $ISSUE_KEY"
            fi
          done
